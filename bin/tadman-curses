""" This is the main script for the Tadman package manager. This script
specifically utilizes the curses interface.

Note: Many functions used in this script are in the tadman.main module.
"""

# Standard
import os
import sys
# Scripts
import tadman.curses_interface
import tadman.main
import tadman.path_tools
import tadman.linker

INSTALL_PATH = '/usr/local/tadman'

arguments = sys.argv
mode = arguments[1]

if mode == 'help':
    tadman.main.print_help_message()

elif mode == 'version':
    print("Tadman 0.1.0")

elif mode == 'list':
    try:
        tadman.main.list_package_contents(INSTALL_PATH, arguments[2])
    except IndexError:
        tadman.main.list_package_directory(INSTALL_PATH)

elif mode == 'build':
    # Make sure a path to directory is available and exists
    try:
        package_path = tadman.path_tools.last_slash_check(arguments[2])
        if not os.path.isdir(package_path):
            print("Invalid directory entered")
            sys.exit(0)
    except IndexError:
        print("You are missing the PATH argument")
        sys.exit(0)

    # Ensure the user running the script is the root user
    tadman.main.check_for_root()
    # Get info from the package
    package_info = tadman.main.get_package_info(package_path)
    clean_dict, package_name, package_version, build_type = package_info
    # Run the curses-based user interface using the info from above
    interface = tadman.curses_interface.main_loop(clean_dict, package_name,
                                                  package_version, build_type)
    if interface:
        # Generate the options from the selection indexes
        command = tadman.main.configure_maker(clean_dict, interface[2],
                                              build_type)
        output_directory = "%s/%s-%s" % (INSTALL_PATH, interface[0],
                                         interface[1])
        # Finally, build the package
        tadman.main.build_package_source(package_path, output_directory,
                                         command)
        if tadman.main.simple_prompt("Would you like to install this package?"):
            tadman.linker.sym_farm(output_directory)
    else:
        print("Tadman exited")

elif mode in ['install', 'uninstall']:
    # Make sure a path to directory is available and exists
    try:
        link_to_path = tadman.path_tools.last_slash_check(arguments[2])
    except IndexError:
        print("You are missing the PATH_OR_NAME argument")
        sys.exit(0)
    else:
        link_to_path = tadman.main.find_link_path(INSTALL_PATH, link_to_path)

    print(link_to_path)
    if mode == 'install':
        tadman.linker.sym_farm(link_to_path)
    elif mode == 'uninstall':
        tadman.linker.sym_reap(link_to_path)
        if tadman.main.simple_prompt("Would you like to delete this package?"):
            tadman.path_tools.remove_empty_folders(link_to_path)
